definitions:
  auth.AuthDataLogin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.AuthDataRefresh:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  auth.AuthDataRegister:
    properties:
      email:
        type: string
      firstName:
        maxLength: 50
        minLength: 2
        type: string
      lastName:
        maxLength: 50
        minLength: 2
        type: string
      password:
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    type: object
  auth.JwtPair:
    properties:
      accessExpiresIn:
        type: string
      accessToken:
        type: string
      refreshExpiresIn:
        type: string
      refreshToken:
        type: string
    type: object
  entity.Estimate:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      reviewId:
        type: string
      value:
        type: integer
    type: object
  entity.Restaurant:
    properties:
      address:
        type: string
      city:
        type: string
      country:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      isVerified:
        type: boolean
      kitchenType:
        items:
          type: string
        type: array
      metadata:
        additionalProperties: {}
        type: object
      name:
        type: string
      site:
        type: string
      updatedAt:
        type: string
    type: object
  entity.Review:
    properties:
      createdAt:
        type: string
      id:
        type: string
      restaurantId:
        type: string
      summary:
        type: string
      userId:
        type: string
    type: object
  entity.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      isVerified:
        type: boolean
      lastName:
        type: string
      lastSeen:
        type: string
      role:
        $ref: '#/definitions/enum.Role'
      updatedAt:
        type: string
      username:
        type: string
      verifiedBy:
        type: string
    type: object
  enum.Role:
    enum:
    - critic
    - restorer
    - moderator
    - admin
    - helper
    type: string
    x-enum-varnames:
    - RoleCritic
    - RoleRestorer
    - RoleModerator
    - RoleAdmin
    - RoleHelper
  estimate.CreateEstimateDTO:
    properties:
      description:
        maxLength: 50
        minLength: 2
        type: string
      name:
        maxLength: 50
        minLength: 2
        type: string
      value:
        maximum: 100
        minimum: 1
        type: integer
    required:
    - description
    - name
    - value
    type: object
  helper.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  helper.Response:
    properties:
      data: {}
      status:
        type: boolean
    type: object
  restaurant.CreateRestaurantDTO:
    properties:
      address:
        type: string
      city:
        type: string
      country:
        type: string
      description:
        type: string
      images:
        items:
          type: string
        type: array
      kitchenType:
        items:
          type: string
        type: array
      metadata:
        additionalProperties: {}
        type: object
      name:
        type: string
      site:
        type: string
    required:
    - name
    type: object
host: 127.0.0.1:3000
info:
  contact: {}
  title: BiteReview API
  version: "1.0"
paths:
  /api/v1/admin/restaurant:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные регистрации ресторана
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/restaurant.CreateRestaurantDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Restaurant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Регистрация ресторана в системе
      tags:
      - Рестораны
      - Рестораны / Администратор
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Авторизационные данные
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.AuthDataLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.JwtPair'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      summary: Авторизация
      tags:
      - Авторизация
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные обновления токена
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.AuthDataRefresh'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.JwtPair'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      summary: Обновление Access токена
      tags:
      - Авторизация
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные регистрации
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.AuthDataRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.JwtPair'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      summary: Регистрация
      tags:
      - Авторизация
  /api/v1/estimate/{reviewId}:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID review
        in: path
        name: reviewId
        required: true
        type: string
      - description: Оценка
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/estimate.CreateEstimateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Estimate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Добавление оценки в обзор
      tags:
      - Оценка
  /api/v1/moderator/restaurant/{id}/unverify:
    patch:
      consumes:
      - application/json
      parameters:
      - description: ID ресторана
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Отмена верификации ресторана
      tags:
      - Рестораны
      - Рестораны / Модератор
  /api/v1/moderator/restaurant/{id}/verify:
    patch:
      consumes:
      - application/json
      parameters:
      - description: ID ресторана
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Верификция ресторана
      tags:
      - Рестораны
      - Рестораны / Модератор
  /api/v1/public/estimate/{reviewId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID review
        in: path
        name: reviewId
        required: true
        type: string
      - description: Количество
        in: query
        name: limit
        type: integer
      - description: Смещение
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Estimate'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Получение оценок из обзора
      tags:
      - Оценка
      - Оценка / Общедоступные
  /api/v1/public/review/{restaurantId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID ресторана
        in: path
        name: restaurantId
        required: true
        type: string
      - description: Количество
        in: query
        name: limit
        type: integer
      - description: Смещение
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Review'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      summary: Получить обзоры
      tags:
      - Обзоры
    post:
      consumes:
      - application/json
      parameters:
      - description: ID ресторана
        in: path
        name: restaurantId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Review'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Создать обзор
      tags:
      - Обзоры
  /api/v1/restaurant:
    get:
      consumes:
      - application/json
      parameters:
      - description: Количество ресторанов
        in: query
        name: limit
        type: integer
      - description: Смещение по количеству
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Restaurant'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      summary: Получить рестораны
      tags:
      - Рестораны
  /api/v1/restaurant/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID ресторана
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Restaurant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      summary: Получить ресторан по ID
      tags:
      - Рестораны
  /api/v1/user/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Получить данные о своём аккаунте
      tags:
      - Пользователь
securityDefinitions:
  ApiKeyAuth:
    description: Bearer Token authortization
    in: Header
    name: Authorization
    type: apiKey
swagger: "2.0"
